#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        SYMBOL_LAYER: SYMBOL_LAYER {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(255,100,100)>,
                <&macro_tap>,
                <&rgb_ug RGB_ON>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>,
                <&macro_tap>,
                <&rgb_ug RGB_OFF>;

            label = "SYMBOL_LAYER";
        };

        NUM_LAYER: NUM_LAYER {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&mo 2>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(235,100,100)>,
                <&macro_tap>,
                <&rgb_ug RGB_ON>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2>,
                <&macro_tap>,
                <&rgb_ug RGB_OFF>;

            label = "NUM_LAYER";
        };

        iterm: iterm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp ESC>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "ITERM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R       &kp T                               &kp UP                &kp Y        &kp U          &kp I      &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S  &kp D     &kp F       &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V       &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &SYMBOL_LAYER  &lt 3 SPACE                                               &lt 3 ENTER  &NUM_LAYER  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp LEFT_CONTROL  &trans          &kp UP_ARROW    &iterm           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                &mmv MOVE_UP                     &trans   &trans  &trans        &trans  &kp C_PLAY_PAUSE  &kp BSPC
&kp CAPS          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LEFT_BRACKET      &kp RIGHT_BRACKET                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans   &trans  &trans        &trans  &trans            &trans
&kp LEFT_SHIFT    &trans          &trans          &trans           &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp C_MUTE                    &mmv MOVE_DOWN                   &trans   &trans  &trans        &trans  &trans            &kp RIGHT_SHIFT
                                                  &kp LEFT_GUI     &trans                &kp SPACE                                                                             &kp RET  &trans  &kp LEFT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE       &trans  &trans  &trans            &trans  &trans                               &mmv MOVE_UP                     &kp MINUS  &kp N7        &kp N8        &kp N9        &trans  &kp BSPC
&trans          &trans  &trans  &trans            &trans  &trans               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp EQUAL  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &kp NON_US_BACKSLASH
&kp LEFT_SHIFT  &trans  &trans  &trans            &trans  &trans     &trans                    &mmv MOVE_DOWN                   &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &kp RIGHT_SHIFT
                                &kp LEFT_COMMAND  &trans  &kp SPACE                                                             &kp RET    &trans        &kp LEFT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &trans  &trans  &bt BT_CLR  &bt BT_PRV  &bt BT_NXT                                     &mmv MOVE_UP                     &out OUT_BLE  &out OUT_USB  &trans     &trans     &trans  &trans
&bootloader     &trans  &trans  &trans      &trans      &trans                         &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans        &mkp LCLK     &mkp MCLK  &mkp RCLK  &trans  &trans
&sys_reset      &trans  &trans  &trans      &trans      &rgb_ug RGB_TOG  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans        &trans        &trans     &trans     &trans  &trans
                                &trans      &trans      &trans                                                                          &trans        &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
